diff --git a/net/sunrpc/xprtrdma/svc_rdma_transport.c b/net/sunrpc/xprtrdma/svc_rdma_transport.c
index 4e61880..5620016 100644
--- a/net/sunrpc/xprtrdma/svc_rdma_transport.c
+++ b/net/sunrpc/xprtrdma/svc_rdma_transport.c
@@ -66,7 +66,9 @@ static void dto_tasklet_func(unsigned long data);
 static void svc_rdma_detach(struct svc_xprt *xprt);
 static void svc_rdma_free(struct svc_xprt *xprt);
 static int svc_rdma_has_wspace(struct svc_xprt *xprt);
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(3, 14, 0) || CONFIG_COMPAT_RPC_XPRT_OPS_HAS_SECURE_PORT)
 static int svc_rdma_secure_port(struct svc_rqst *);
+#endif
 static void rq_cq_reap(struct svcxprt_rdma *xprt);
 static void sq_cq_reap(struct svcxprt_rdma *xprt);
 
@@ -84,7 +86,9 @@ static struct svc_xprt_ops svc_rdma_ops = {
 	.xpo_prep_reply_hdr = svc_rdma_prep_reply_hdr,
 	.xpo_has_wspace = svc_rdma_has_wspace,
 	.xpo_accept = svc_rdma_accept,
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(3, 14, 0) || CONFIG_COMPAT_RPC_XPRT_OPS_HAS_SECURE_PORT)
 	.xpo_secure_port = svc_rdma_secure_port,
+#endif
 };
 
 struct svc_xprt_class svc_rdma_class = {
@@ -1205,10 +1209,12 @@ static int svc_rdma_has_wspace(struct svc_xprt *xprt)
 	return 1;
 }
 
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(3, 14, 0) || CONFIG_COMPAT_RPC_XPRT_OPS_HAS_SECURE_PORT)
 static int svc_rdma_secure_port(struct svc_rqst *rqstp)
 {
 	return 1;
 }
+#endif
 
 /*
  * Attempt to register the kvec representing the RPC memory with the
