From: Tatyana Nikolova <tatyana.e.nikolova@intel.com>
Subject: [PATCH] BACKPORT: RDMA/iwpm

Signed-off-by: Tatyana Nikolova <tatyana.e.nikolova@intel.com>
---
 drivers/infiniband/core/iwpm_util.c |   26 ++++++++++++++++++++++++--
 1 files changed, 24 insertions(+), 2 deletions(-)

diff --git a/drivers/infiniband/core/iwpm_util.c b/drivers/infiniband/core/iwpm_util.c
index xxxxxxx..xxxxxxx xxxxxx
--- a/drivers/infiniband/core/iwpm_util.c
+++ b/drivers/infiniband/core/iwpm_util.c
@@ -131,6 +131,9 @@ int iwpm_remove_mapinfo(struct sockaddr_storage *local_sockaddr,
 	struct hlist_node *tmp_hlist_node;
 	struct hlist_head *hash_bucket_head;
 	struct iwpm_mapping_info *map_info = NULL;
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(3,9,0))
+	struct hlist_node *node;
+#endif
 	unsigned long flags;
 	int ret = -EINVAL;
 
@@ -139,9 +142,13 @@ int iwpm_remove_mapinfo(struct sockaddr_storage *local_sockaddr,
 		hash_bucket_head = get_hash_bucket_head(
 					local_sockaddr,
 					mapped_local_addr);
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(3,9,0))
+		hlist_for_each_entry_safe(map_info, node, tmp_hlist_node,
+					hash_bucket_head, hlist_node) {
+#else
 		hlist_for_each_entry_safe(map_info, tmp_hlist_node,
 					hash_bucket_head, hlist_node) {
-
+#endif
 			if (!iwpm_compare_sockaddr(&map_info->mapped_sockaddr,
 						mapped_local_addr)) {
 
@@ -161,15 +168,22 @@ static void free_hash_bucket(void)
 {
 	struct hlist_node *tmp_hlist_node;
 	struct iwpm_mapping_info *map_info;
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(3,9,0))
+	struct hlist_node *node;
+#endif
 	unsigned long flags;
 	int i;
 
 	/* remove all the mapinfo data from the list */
 	spin_lock_irqsave(&iwpm_mapinfo_lock, flags);
 	for (i = 0; i < IWPM_HASH_BUCKET_SIZE; i++) {
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(3,9,0))
+		hlist_for_each_entry_safe(map_info, node, tmp_hlist_node,
+			&iwpm_hash_bucket[i], hlist_node) {
+#else
 		hlist_for_each_entry_safe(map_info, tmp_hlist_node,
 			&iwpm_hash_bucket[i], hlist_node) {
-
+#endif
 				hlist_del_init(&map_info->hlist_node);
 				kfree(map_info);
 			}
@@ -498,6 +512,9 @@ int iwpm_send_mapinfo(u8 nl_client, int iwpm_pid)
 	struct iwpm_mapping_info *map_info;
 	struct sk_buff *skb = NULL;
 	struct nlmsghdr *nlh;
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(3,9,0))
+	struct hlist_node *node;
+#endif
 	int skb_num = 0, mapping_num = 0;
 	int i = 0, nlmsg_bytes = 0;
 	unsigned long flags;
@@ -513,8 +530,13 @@ int iwpm_send_mapinfo(u8 nl_client, int iwpm_pid)
 	skb_num++;
 	spin_lock_irqsave(&iwpm_mapinfo_lock, flags);
 	for (i = 0; i < IWPM_HASH_BUCKET_SIZE; i++) {
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(3,9,0))
+		hlist_for_each_entry(map_info, node,
+			&iwpm_hash_bucket[i], hlist_node) {
+#else
 		hlist_for_each_entry(map_info, &iwpm_hash_bucket[i],
 				     hlist_node) {
+#endif
 			if (map_info->nl_client != nl_client)
 				continue;
 			nlh = NULL;
