From 5d26d2ca164af6b639e7862105a7491b217847e5 Mon Sep 17 00:00:00 2001
From: Vladimir Sokolovsky <vlad@mellanox.com>
Date: Tue, 10 Jul 2012 15:57:24 +0300
Subject: [PATCH 1/5] ib_core: backport dst_fetch_ha

Signed-off-by: Vladimir Sokolovsky <vlad@mellanox.com>
---
 drivers/infiniband/core/addr.c |   36 ++++++++++++++++++++++++++++++++++++
 1 files changed, 36 insertions(+), 0 deletions(-)

diff --git a/drivers/infiniband/core/addr.c b/drivers/infiniband/core/addr.c
index 6ef660c..e00422b 100644
--- a/drivers/infiniband/core/addr.c
+++ b/drivers/infiniband/core/addr.c
@@ -38,6 +38,7 @@
 #include <linux/slab.h>
 #include <linux/workqueue.h>
 #include <linux/module.h>
+#include <linux/version.h>
 #include <net/arp.h>
 #include <net/neighbour.h>
 #include <net/route.h>
@@ -178,6 +179,7 @@ static void queue_req(struct addr_req *req)
 	mutex_unlock(&lock);
 }
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,39)
 static int dst_fetch_ha(struct dst_entry *dst, struct rdma_dev_addr *dev_addr, void *daddr)
 {
 	struct neighbour *n;
@@ -200,6 +202,7 @@ static int dst_fetch_ha(struct dst_entry *dst, struct rdma_dev_addr *dev_addr, v
 
 	return ret;
 }
+#endif
 
 static int addr4_resolve(struct sockaddr_in *src_in,
 			 struct sockaddr_in *dst_in,
@@ -231,12 +234,33 @@ static int addr4_resolve(struct sockaddr_in *src_in,
 	}
 
 	/* If the device does ARP internally, return 'done' */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,39)
 	if (rt->dst.dev->flags & IFF_NOARP) {
 		ret = rdma_copy_addr(addr, rt->dst.dev, NULL);
 		goto put;
 	}
 
 	ret = dst_fetch_ha(&rt->dst, addr, &fl4.daddr);
+#else
+	if (rt->idev->dev->flags & IFF_NOARP) {
+		ret = rdma_copy_addr(addr, rt->idev->dev, NULL);
+		goto put;
+	}
+
+	neigh = neigh_lookup(&arp_tbl, &rt->rt_gateway, rt->idev->dev);
+	if (!neigh || !(neigh->nud_state & NUD_VALID)) {
+		neigh_event_send(rt->u.dst.neighbour, NULL);
+		ret = -ENODATA;
+		if (neigh)
+			goto release;
+ 		goto put;
+ 	}
+
+	ret = rdma_copy_addr(addr, neigh->dev, neigh->ha);
+release:
+	neigh_release(neigh);
+#endif
+
 put:
 	ip_rt_put(rt);
 out:
@@ -284,7 +308,19 @@ static int addr6_resolve(struct sockaddr_in6 *src_in,
 		goto put;
 	}
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,39)
 	ret = dst_fetch_ha(dst, addr, &fl6.daddr);
+#else
+	neigh = dst->neighbour;
+	if (!neigh || !(neigh->nud_state & NUD_VALID)) {
+		neigh_event_send(dst->neighbour, NULL);
+		ret = -ENODATA;
+		goto put;
+	}
+
+	ret = rdma_copy_addr(addr, dst->dev, neigh->ha);
+#endif
+
 put:
 	dst_release(dst);
 	return ret;
-- 
1.7.1

