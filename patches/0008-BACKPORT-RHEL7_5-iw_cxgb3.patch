From 54739868a21019a1b8a61d5abd636accf396b6f2 Mon Sep 17 00:00:00 2001
From: root <root@sukna.blr.asicdesigners.com>
Date: Thu, 21 Jun 2018 14:58:01 +0530
Subject: [PATCH] iw_cxgb3: Compilation checks for RHEL7.5

 - Check for new timer settings API, else use the old timer API
 - Fix Makefile include paths
---
 drivers/infiniband/hw/cxgb3/Makefile        |  2 +-
 drivers/infiniband/hw/cxgb3/iwch_cm.c       | 22 ++++++++++++++++++++++
 drivers/infiniband/hw/cxgb3/iwch_provider.c |  3 +++
 drivers/infiniband/hw/cxgb3/iwch_provider.h |  3 +++
 4 files changed, 29 insertions(+), 1 deletion(-)

diff --git a/drivers/infiniband/hw/cxgb3/Makefile b/drivers/infiniband/hw/cxgb3/Makefile
index 66fe091..a470db1 100644
--- a/drivers/infiniband/hw/cxgb3/Makefile
+++ b/drivers/infiniband/hw/cxgb3/Makefile
@@ -1,5 +1,5 @@
 # SPDX-License-Identifier: GPL-2.0
-ccflags-y := -Idrivers/net/ethernet/chelsio/cxgb3
+ccflags-y := -I$(CWD)/drivers/net/ethernet/chelsio/cxgb3
 
 obj-$(CONFIG_INFINIBAND_CXGB3) += iw_cxgb3.o
 
diff --git a/drivers/infiniband/hw/cxgb3/iwch_cm.c b/drivers/infiniband/hw/cxgb3/iwch_cm.c
index 1c90c86..0489b1f 100644
--- a/drivers/infiniband/hw/cxgb3/iwch_cm.c
+++ b/drivers/infiniband/hw/cxgb3/iwch_cm.c
@@ -107,7 +107,11 @@ static struct workqueue_struct *workq;
 static struct sk_buff_head rxq;
 
 static struct sk_buff *get_skb(struct sk_buff *skb, int len, gfp_t gfp);
+#ifdef HAVE_TIMER_SETUP
 static void ep_timeout(struct timer_list *t);
+#else
+static void ep_timeout(unsigned long arg);
+#endif
 static void connect_reply_upcall(struct iwch_ep *ep, int status);
 
 static void start_ep_timer(struct iwch_ep *ep)
@@ -119,6 +123,10 @@ static void start_ep_timer(struct iwch_ep *ep)
 	} else
 		get_ep(&ep->com);
 	ep->timer.expires = jiffies + ep_timeout_secs * HZ;
+#ifndef HAVE_TIMER_SETUP
+	ep->timer.data = (unsigned long)ep;
+	ep->timer.function = ep_timeout;
+#endif
 	add_timer(&ep->timer);
 }
 
@@ -1397,7 +1405,11 @@ static int pass_accept_req(struct t3cdev *tdev, struct sk_buff *skb, void *ctx)
 	child_ep->l2t = l2t;
 	child_ep->dst = dst;
 	child_ep->hwtid = hwtid;
+#ifdef HAVE_TIMER_SETUP
 	timer_setup(&child_ep->timer, ep_timeout, 0);
+#else
+	init_timer(&child_ep->timer);
+#endif
 	cxgb3_insert_tid(tdev, &t3c_client, child_ep, hwtid);
 	accept_cr(child_ep, req->peer_ip, skb);
 	goto out;
@@ -1717,9 +1729,15 @@ static int ec_status(struct t3cdev *tdev, struct sk_buff *skb, void *ctx)
 	return CPL_RET_BUF_DONE;
 }
 
+#ifdef HAVE_TIMER_SETUP
 static void ep_timeout(struct timer_list *t)
 {
 	struct iwch_ep *ep = from_timer(ep, t, timer);
+#else
+static void ep_timeout(unsigned long arg)
+{
+	struct iwch_ep *ep = (struct iwch_ep *)arg;
+#endif
 	struct iwch_qp_attributes attrs;
 	unsigned long flags;
 	int abort = 1;
@@ -1897,7 +1915,11 @@ int iwch_connect(struct iw_cm_id *cm_id, struct iw_cm_conn_param *conn_param)
 		err = -ENOMEM;
 		goto out;
 	}
+#ifdef HAVE_TIMER_SETUP
 	timer_setup(&ep->timer, ep_timeout, 0);
+#else
+	init_timer(&ep->timer);
+#endif
 	ep->plen = conn_param->private_data_len;
 	if (ep->plen)
 		memcpy(ep->mpa_pkt + sizeof(struct mpa_message),
diff --git a/drivers/infiniband/hw/cxgb3/iwch_provider.c b/drivers/infiniband/hw/cxgb3/iwch_provider.c
index be097c6..aeed2a3 100644
--- a/drivers/infiniband/hw/cxgb3/iwch_provider.c
+++ b/drivers/infiniband/hw/cxgb3/iwch_provider.c
@@ -971,6 +971,9 @@ static struct ib_qp *iwch_create_qp(struct ib_pd *pd,
 		insert_mmap(ucontext, mm2);
 	}
 	qhp->ibqp.qp_num = qhp->wq.qpid;
+#ifndef HAVE_TIMER_SETUP
+	init_timer(&(qhp->timer));
+#endif
 	pr_debug("%s sq_num_entries %d, rq_num_entries %d qpid 0x%0x qhp %p dma_addr 0x%llx size %d rq_addr 0x%x\n",
 		 __func__, qhp->attr.sq_num_entries, qhp->attr.rq_num_entries,
 		 qhp->wq.qpid, qhp, (unsigned long long)qhp->wq.dma_addr,
diff --git a/drivers/infiniband/hw/cxgb3/iwch_provider.h b/drivers/infiniband/hw/cxgb3/iwch_provider.h
index 2e38dde..5ac00d6 100644
--- a/drivers/infiniband/hw/cxgb3/iwch_provider.h
+++ b/drivers/infiniband/hw/cxgb3/iwch_provider.h
@@ -168,6 +168,9 @@ struct iwch_qp {
 	atomic_t refcnt;
 	wait_queue_head_t wait;
 	enum IWCH_QP_FLAGS flags;
+#ifndef HAVE_TIMER_SETUP
+	struct timer_list timer;
+#endif
 };
 
 static inline int qp_quiesced(struct iwch_qp *qhp)
-- 
1.8.3.1

