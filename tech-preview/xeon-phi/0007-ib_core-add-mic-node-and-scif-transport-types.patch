From 88e691fb36d4d64cbfbc4b71fee34bf78e53f2a6 Mon Sep 17 00:00:00 2001
From: Jerrie Coffman <jerrie.l.coffman@intel.com>
Date: Wed, 7 Sep 2016 11:14:21 -0700
Subject: [PATCH 7/7] ib_core add mic node and scif transport types

The OFED SCIF driver implements a software-emulated RDMA device to allow OFED
based applications, such as Intel MPI, to run on Intel(R) MIC Architecture
without the presence of a physical HCA.  OFED SCIF is only targeted for inter-
node communication within a single platform, where a node is a coprocessor
or the host processor.  This patch adds new node and transport types to the
ib_core kernel module to distinguish this new RDMA interface type.
---
 drivers/infiniband/core/sysfs.c | 3 +++
 drivers/infiniband/core/verbs.c | 4 ++++
 include/rdma/ib_verbs.h         | 5 ++++-
 3 files changed, 11 insertions(+), 1 deletion(-)

diff --git a/drivers/infiniband/core/sysfs.c b/drivers/infiniband/core/sysfs.c
index 15defef..26a2573 100644
--- a/drivers/infiniband/core/sysfs.c
+++ b/drivers/infiniband/core/sysfs.c
@@ -299,6 +299,8 @@ static ssize_t link_layer_show(struct ib_port *p, struct port_attribute *unused,
 		return sprintf(buf, "%s\n", "InfiniBand");
 	case IB_LINK_LAYER_ETHERNET:
 		return sprintf(buf, "%s\n", "Ethernet");
+	case IB_LINK_LAYER_SCIF:
+		return sprintf(buf, "%s\n", "SCIF");
 	default:
 		return sprintf(buf, "%s\n", "Unknown");
 	}
@@ -1146,6 +1148,7 @@ static ssize_t show_node_type(struct device *device,
 	case RDMA_NODE_USNIC_UDP: return sprintf(buf, "%d: usNIC UDP\n", dev->node_type);
 	case RDMA_NODE_IB_SWITCH: return sprintf(buf, "%d: switch\n", dev->node_type);
 	case RDMA_NODE_IB_ROUTER: return sprintf(buf, "%d: router\n", dev->node_type);
+	case RDMA_NODE_MIC:	  return sprintf(buf, "%d: MIC\n", dev->node_type);
 	default:		  return sprintf(buf, "%d: <unknown>\n", dev->node_type);
 	}
 }
diff --git a/drivers/infiniband/core/verbs.c b/drivers/infiniband/core/verbs.c
index f2b776e..ee18f7d 100644
--- a/drivers/infiniband/core/verbs.c
+++ b/drivers/infiniband/core/verbs.c
@@ -190,6 +190,8 @@ rdma_node_get_transport(enum rdma_node_type node_type)
 		return RDMA_TRANSPORT_USNIC;
 	case RDMA_NODE_USNIC_UDP:
 		return RDMA_TRANSPORT_USNIC_UDP;
+	case RDMA_NODE_MIC:
+		return RDMA_TRANSPORT_SCIF;
 	default:
 		BUG();
 		return 0;
@@ -209,6 +211,8 @@ enum rdma_link_layer rdma_port_get_link_layer(struct ib_device *device, u8 port_
 	case RDMA_TRANSPORT_USNIC:
 	case RDMA_TRANSPORT_USNIC_UDP:
 		return IB_LINK_LAYER_ETHERNET;
+	case RDMA_TRANSPORT_SCIF:
+		return IB_LINK_LAYER_SCIF;
 	default:
 		return IB_LINK_LAYER_UNSPECIFIED;
 	}
diff --git a/include/rdma/ib_verbs.h b/include/rdma/ib_verbs.h
index ac83f4d..3cbb9d8 100644
--- a/include/rdma/ib_verbs.h
+++ b/include/rdma/ib_verbs.h
@@ -96,6 +96,7 @@ enum rdma_node_type {
 	RDMA_NODE_RNIC,
 	RDMA_NODE_USNIC,
 	RDMA_NODE_USNIC_UDP,
+	RDMA_NODE_MIC,
 };
 
 enum {
@@ -107,7 +108,8 @@ enum rdma_transport_type {
 	RDMA_TRANSPORT_IB,
 	RDMA_TRANSPORT_IWARP,
 	RDMA_TRANSPORT_USNIC,
-	RDMA_TRANSPORT_USNIC_UDP
+	RDMA_TRANSPORT_USNIC_UDP,
+	RDMA_TRANSPORT_SCIF,
 };
 
 enum rdma_protocol_type {
@@ -153,6 +155,7 @@ enum rdma_link_layer {
 	IB_LINK_LAYER_UNSPECIFIED,
 	IB_LINK_LAYER_INFINIBAND,
 	IB_LINK_LAYER_ETHERNET,
+	IB_LINK_LAYER_SCIF,
 };
 
 enum ib_device_cap_flags {
-- 
2.7.0

